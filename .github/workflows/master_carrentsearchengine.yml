name: Build and deploy ASP.Net Core app with React to Azure Web App - carrentsearchengine

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up .NET Core SDK
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Build the .NET Core backend
      - name: Build with dotnet
        run: dotnet build --configuration Release

      # Publish the .NET Core backend (for deployment)
      - name: dotnet publish
        run: dotnet publish -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      # Upload artifacts for deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: ${{env.DOTNET_ROOT}}/myapp


  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # Download the artifacts from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: app-artifacts

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      # Deploy to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'carrentsearchengine'  # Replace with your Web App name
          slot-name: 'Production'  # Use the slot you want to deploy to (e.g., 'staging', 'production')
          package: .  # Path to the directory to deploy (the root of your repo after build)
