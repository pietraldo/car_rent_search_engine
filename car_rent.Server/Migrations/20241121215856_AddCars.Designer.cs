// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using car_rent.Server.Database;

#nullable disable

namespace car_rent.Server.Migrations
{
    [DbContext(typeof(SearchEngineDbContext))]
    [Migration("20241121215856_AddCars")]
    partial class AddCars
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("car_rent.Server.Database.Company", b =>
                {
                    b.Property<int>("Company_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Company_ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Company_ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("car_rent.Server.Database.Offer", b =>
                {
                    b.Property<int>("Offer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Offer_ID"));

                    b.Property<int>("Car_ID")
                        .HasColumnType("int");

                    b.Property<int>("Client_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Offer_ID");

                    b.HasIndex("Car_ID");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("car_rent.Server.Database.Rent", b =>
                {
                    b.Property<int>("Rent_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rent_ID"));

                    b.Property<int>("Car_ID")
                        .HasColumnType("int");

                    b.Property<int>("Company_ID")
                        .HasColumnType("int");

                    b.Property<int>("Offer_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Rent_date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Return_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Rent_ID");

                    b.HasIndex("Car_ID");

                    b.HasIndex("Company_ID");

                    b.HasIndex("Offer_ID")
                        .IsUnique();

                    b.HasIndex("User_ID");

                    b.ToTable("History");
                });

            modelBuilder.Entity("car_rent.Server.Database.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date_of_birth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("House_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Issue_date_driver_license")
                        .HasColumnType("datetime2");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("car_rent.Server.Model.Car", b =>
                {
                    b.Property<int>("Car_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Car_ID"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Car_ID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("car_rent.Server.Database.Offer", b =>
                {
                    b.HasOne("car_rent.Server.Model.Car", "Car")
                        .WithMany("Offers")
                        .HasForeignKey("Car_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Car");
                });

            modelBuilder.Entity("car_rent.Server.Database.Rent", b =>
                {
                    b.HasOne("car_rent.Server.Model.Car", "Car")
                        .WithMany()
                        .HasForeignKey("Car_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("car_rent.Server.Database.Company", "Company")
                        .WithMany("Rents")
                        .HasForeignKey("Company_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("car_rent.Server.Database.Offer", "Offer")
                        .WithOne("Rent")
                        .HasForeignKey("car_rent.Server.Database.Rent", "Offer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("car_rent.Server.Database.User", "User")
                        .WithMany("Rents")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Company");

                    b.Navigation("Offer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("car_rent.Server.Database.Company", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("car_rent.Server.Database.Offer", b =>
                {
                    b.Navigation("Rent");
                });

            modelBuilder.Entity("car_rent.Server.Database.User", b =>
                {
                    b.Navigation("Rents");
                });

            modelBuilder.Entity("car_rent.Server.Model.Car", b =>
                {
                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
